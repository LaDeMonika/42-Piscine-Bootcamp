//C01
/*
• Create a function that takes a pointer to int as a parameter, and sets the value "42"
to that int.
• Here’s how it should be prototyped :
void ft_ft(int *nbr);
*/
//-
void ft_ft(int *nbr)
{
	*nbr = 42;
}
****************************************************************************
/*
• Create a function that takes a pointer to pointer to pointer to pointer to pointer
to pointer to pointer to pointer to pointer to int as a parameter and sets the value
"42" to that int.
• Here’s how it should be prototyped :
void
ft_ultimate_ft(int *********nbr);
*/
//-
void ft_ultimate_ft(int ********nbr)
{
	********nbr = 42;
}
****************************************************************************
/*
• Create a function that swaps the value of two integers whose addresses are entered
as parameters.
• Here’s how it should be prototyped :
void
ft_swap(int *a, int *b);
*/
//-
void ft_swap(int *a, int *b)
{
	int swap;

	swap = *a;
	*a = *b;
	*b = temp;
	
}
****************************************************************************
/*
• Create a function ft_div_mod prototyped like this :
void  ft_div_mod(int a, int b, int *div, int *mod);
• This function divides parameters a by b and stores the result in the int pointed by
div. It also stores the remainder of the division of a by b in the int pointed by mod.
*/
//-
void ft_div_mod(int a, int b, int *div, int *mod)
{
	*div = a / b;
	*mod = a % b;
}
****************************************************************************
/*
• Create a function ft_ultimate_div_mod with the following prototype :
void ft_ultimate_div_mod(int *a, int *b);
• This function divides parameters a by b. The result of this division is stored in the
int pointed by a. The remainder of the division is stored in the int pointed by b.
*/
//-
void ft_ultimate_div_mod(int a*, int b*)
{
	int temp;
	
	temp = *a;
	*a = temp / b;
	*b = temp % b;
}
****************************************************************************

