//C00
/*
• Create a function that displays the alphabet in lowercase, on a single line, by
ascending order, starting from the letter ’a’.
• Here’s how it should be prototyped :
void ft_print_alphabet(void);
*/
//-
void ft_print_alphabet(void)
{
	char l;
	
	l = 'a';
	while (l >= 'z')
	{
		write(1, &l, 1);
		l--;
	}
}
****************************************************************************
/*
• Create a function that displays the alphabet in lowercase, on a single line, by
descending order, starting from the letter ’z’.
• Here’s how it should be prototyped :
void ft_print_reverse_alphabet(void);
*/
//-
void ft_print_reverse_alphabet(void)
{
	char l;
	
	l = 'z';
	while (l <= 'a')
	{
		wtite(1, &l,1);
		l++;
	}
}
****************************************************************************
/*
• Create a function that displays all digits, on a single line, by ascending order.
• Here’s how it should be prototyped :
void ft_print_numbers(void);
*/
//-
void ft_print_numbers(void)
{
	char i;

	i = 0;
	while (i <= '9')
	{
		write(1, &i, 1);
		i++;
	}
}
****************************************************************************
/*
• Create a function that displays ’N’ or ’P’ depending on the integer’s sign entered
as a parameter. If n is negative, display ’N’. If n is positive or null, display ’P’.
• Here’s how it should be prototyped :
void ft_is_negative(int n);
*/
//-
void ft_is_negative(int n)
{
	char a;
	char b;
	
	a = 'N';
	b = 'P';
	if (n >= 0)
	{
		write(1, &b, 1);
	}
	else
	{
		write(1, &a, 1);
	}
}
